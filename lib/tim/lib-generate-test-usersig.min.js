!function (e, t) {'object' == typeof exports && 'undefined' != typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define(t) : (e = e || self).LibGenerateTestUserSig = t()}(this, function () {
    'use strict'
    var e = 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {},
        t = [], r = [], n = 'undefined' != typeof Uint8Array ? Uint8Array : Array, i = !1

    function o () {
        i = !0
        for (var e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', n = 0, o = e.length; n < o; ++n) t[n] = e[n], r[e.charCodeAt(n)] = n
        r['-'.charCodeAt(0)] = 62, r['_'.charCodeAt(0)] = 63
    }

    function a (e, r, n) {
        for (var i, o, a = [], s = r; s < n; s += 3) i = (e[s] << 16) + (e[s + 1] << 8) + e[s + 2], a.push(t[(o = i) >> 18 & 63] + t[o >> 12 & 63] + t[o >> 6 & 63] + t[63 & o])
        return a.join('')
    }

    function s (e) {
        var r
        i || o()
        for (var n = e.length, s = n % 3, h = '', f = [], l = 0, c = n - s; l < c; l += 16383) f.push(a(e, l, l + 16383 > c ? c : l + 16383))
        return 1 === s ? (r = e[n - 1], h += t[r >> 2], h += t[r << 4 & 63], h += '==') : 2 === s && (r = (e[n - 2] << 8) + e[n - 1], h += t[r >> 10], h += t[r >> 4 & 63], h += t[r << 2 & 63], h += '='), f.push(h), f.join('')
    }

    function h (e, t, r, n, i) {
        var o, a, s = 8 * i - n - 1, h = (1 << s) - 1, f = h >> 1, l = -7, c = r ? i - 1 : 0, u = r ? -1 : 1,
            d = e[t + c]
        for (c += u, o = d & (1 << -l) - 1, d >>= -l, l += s; l > 0; o = 256 * o + e[t + c], c += u, l -= 8)
            for (a = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; a = 256 * a + e[t + c], c += u, l -= 8)
                if (0 === o) {
                    o = 1 - f
                } else {
                    if (o === h) return a ? NaN : 1 / 0 * (d ? -1 : 1)
                    a += Math.pow(2, n), o -= f
                }
        return (d ? -1 : 1) * a * Math.pow(2, o - n)
    }

    function f (e, t, r, n, i, o) {
        var a, s, h, f = 8 * o - i - 1, l = (1 << f) - 1, c = l >> 1,
            u = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, p = n ? 1 : -1,
            _ = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0
        for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, a = l) : (a = Math.floor(Math.log(t) / Math.LN2), t * (h = Math.pow(2, -a)) < 1 && (a--, h *= 2), (t += a + c >= 1 ? u / h : u * Math.pow(2, 1 - c)) * h >= 2 && (a++, h /= 2), a + c >= l ? (s = 0, a = l) : a + c >= 1 ? (s = (t * h - 1) * Math.pow(2, i), a += c) : (s = t * Math.pow(2, c - 1) * Math.pow(2, i), a = 0)); i >= 8; e[r + d] = 255 & s, d += p, s /= 256, i -= 8)
            for (a = a << i | s, f += i; f > 0; e[r + d] = 255 & a, d += p, a /= 256, f -= 8)
                e[r + d - p] |= 128 * _
    }

    var l = {}.toString, c = Array.isArray || function (e) {return '[object Array]' == l.call(e)}

    function u () {return p.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823}

    function d (e, t) {
        if (u() < t) throw new RangeError('Invalid typed array length')
        return p.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = p.prototype : (null === e && (e = new p(t)), e.length = t), e
    }

    function p (e, t, r) {
        if (!(p.TYPED_ARRAY_SUPPORT || this instanceof p)) return new p(e, t, r)
        if ('number' == typeof e) {
            if ('string' == typeof t) throw new Error('If encoding is specified then the first argument must be a string')
            return v(this, e)
        }
        return _(this, e, t, r)
    }

    function _ (e, t, r, n) {
        if ('number' == typeof t) throw new TypeError('"value" argument must not be a number')
        return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer ? function (e, t, r, n) {
            if (t.byteLength, r < 0 || t.byteLength < r) throw new RangeError('\'offset\' is out of bounds')
            if (t.byteLength < r + (n || 0)) throw new RangeError('\'length\' is out of bounds')
            t = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n)
            p.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = p.prototype : e = w(e, t)
            return e
        }(e, t, r, n) : 'string' == typeof t ? function (e, t, r) {
            'string' == typeof r && '' !== r || (r = 'utf8')
            if (!p.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding')
            var n = 0 | m(t, r), i = (e = d(e, n)).write(t, r)
            i !== n && (e = e.slice(0, i))
            return e
        }(e, t, r) : function (e, t) {
            if (y(t)) {
                var r = 0 | b(t.length)
                return 0 === (e = d(e, r)).length ? e : (t.copy(e, 0, 0, r), e)
            }
            if (t) {
                if ('undefined' != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || 'length' in t) return 'number' != typeof t.length || (n = t.length) != n ? d(e, 0) : w(e, t)
                if ('Buffer' === t.type && c(t.data)) return w(e, t.data)
            }
            var n
            throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
        }(e, t)
    }

    function g (e) {
        if ('number' != typeof e) throw new TypeError('"size" argument must be a number')
        if (e < 0) throw new RangeError('"size" argument must not be negative')
    }

    function v (e, t) {
        if (g(t), e = d(e, t < 0 ? 0 : 0 | b(t)), !p.TYPED_ARRAY_SUPPORT) for (var r = 0; r < t; ++r) e[r] = 0
        return e
    }

    function w (e, t) {
        var r = t.length < 0 ? 0 : 0 | b(t.length)
        e = d(e, r)
        for (var n = 0; n < r; n += 1) e[n] = 255 & t[n]
        return e
    }

    function b (e) {
        if (e >= u()) throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' + u().toString(16) + ' bytes')
        return 0 | e
    }

    function y (e) {return !(null == e || !e._isBuffer)}

    function m (e, t) {
        if (y(e)) return e.length
        if ('undefined' != typeof ArrayBuffer && 'function' == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength
        'string' != typeof e && (e = '' + e)
        var r = e.length
        if (0 === r) return 0
        for (var n = !1; ;) switch (t) {
            case'ascii':
            case'latin1':
            case'binary':
                return r
            case'utf8':
            case'utf-8':
            case void 0:
                return q(e).length
            case'ucs2':
            case'ucs-2':
            case'utf16le':
            case'utf-16le':
                return 2 * r
            case'hex':
                return r >>> 1
            case'base64':
                return V(e).length
            default:
                if (n) return q(e).length
                t = ('' + t).toLowerCase(), n = !0
        }
    }

    function k (e, t, r) {
        var n = !1
        if ((void 0 === t || t < 0) && (t = 0), t > this.length) return ''
        if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return ''
        if ((r >>>= 0) <= (t >>>= 0)) return ''
        for (e || (e = 'utf8'); ;) switch (e) {
            case'hex':
                return O(this, t, r)
            case'utf8':
            case'utf-8':
                return C(this, t, r)
            case'ascii':
                return I(this, t, r)
            case'latin1':
            case'binary':
                return P(this, t, r)
            case'base64':
                return M(this, t, r)
            case'ucs2':
            case'ucs-2':
            case'utf16le':
            case'utf-16le':
                return U(this, t, r)
            default:
                if (n) throw new TypeError('Unknown encoding: ' + e)
                e = (e + '').toLowerCase(), n = !0
        }
    }

    function E (e, t, r) {
        var n = e[t]
        e[t] = e[r], e[r] = n
    }

    function S (e, t, r, n, i) {
        if (0 === e.length) return -1
        if ('string' == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
            if (i) return -1
            r = e.length - 1
        } else if (r < 0) {
            if (!i) return -1
            r = 0
        }
        if ('string' == typeof t && (t = p.from(t, n)), y(t)) return 0 === t.length ? -1 : x(e, t, r, n, i)
        if ('number' == typeof t) return t &= 255, p.TYPED_ARRAY_SUPPORT && 'function' == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : x(e, [t], r, n, i)
        throw new TypeError('val must be string, number or Buffer')
    }

    function x (e, t, r, n, i) {
        var o, a = 1, s = e.length, h = t.length
        if (void 0 !== n && ('ucs2' === (n = String(n).toLowerCase()) || 'ucs-2' === n || 'utf16le' === n || 'utf-16le' === n)) {
            if (e.length < 2 || t.length < 2) return -1
            a = 2, s /= 2, h /= 2, r /= 2
        }

        function f (e, t) {return 1 === a ? e[t] : e.readUInt16BE(t * a)}

        if (i) {
            var l = -1
            for (o = r; o < s; o++) if (f(e, o) === f(t, -1 === l ? 0 : o - l)) {if (-1 === l && (l = o), o - l + 1 === h) return l * a} else -1 !== l && (o -= o - l), l = -1
        } else for (r + h > s && (r = s - h), o = r; o >= 0; o--) {
            for (var c = !0, u = 0; u < h; u++) if (f(e, o + u) !== f(t, u)) {
                c = !1
                break
            }
            if (c) return o
        }
        return -1
    }

    function R (e, t, r, n) {
        r = Number(r) || 0
        var i = e.length - r
        n ? (n = Number(n)) > i && (n = i) : n = i
        var o = t.length
        if (o % 2 != 0) throw new TypeError('Invalid hex string')
        n > o / 2 && (n = o / 2)
        for (var a = 0; a < n; ++a) {
            var s = parseInt(t.substr(2 * a, 2), 16)
            if (isNaN(s)) return a
            e[r + a] = s
        }
        return a
    }

    function A (e, t, r, n) {return G(q(t, e.length - r), e, r, n)}

    function B (e, t, r, n) {
        return G(function (e) {
            for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r))
            return t
        }(t), e, r, n)
    }

    function z (e, t, r, n) {return B(e, t, r, n)}

    function L (e, t, r, n) {return G(V(t), e, r, n)}

    function T (e, t, r, n) {
        return G(function (e, t) {
            for (var r, n, i, o = [], a = 0; a < e.length && !((t -= 2) < 0); ++a) r = e.charCodeAt(a), n = r >> 8, i = r % 256, o.push(i), o.push(n)
            return o
        }(t, e.length - r), e, r, n)
    }

    function M (e, t, r) {return 0 === t && r === e.length ? s(e) : s(e.slice(t, r))}

    function C (e, t, r) {
        r = Math.min(e.length, r)
        for (var n = [], i = t; i < r;) {
            var o, a, s, h, f = e[i], l = null, c = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1
            if (i + c <= r) switch (c) {
                case 1:
                    f < 128 && (l = f)
                    break
                case 2:
                    128 == (192 & (o = e[i + 1])) && (h = (31 & f) << 6 | 63 & o) > 127 && (l = h)
                    break
                case 3:
                    o = e[i + 1], a = e[i + 2], 128 == (192 & o) && 128 == (192 & a) && (h = (15 & f) << 12 | (63 & o) << 6 | 63 & a) > 2047 && (h < 55296 || h > 57343) && (l = h)
                    break
                case 4:
                    o = e[i + 1], a = e[i + 2], s = e[i + 3], 128 == (192 & o) && 128 == (192 & a) && 128 == (192 & s) && (h = (15 & f) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) > 65535 && h < 1114112 && (l = h)
            }
            null === l ? (l = 65533, c = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), i += c
        }
        return function (e) {
            var t = e.length
            if (t <= D) return String.fromCharCode.apply(String, e)
            var r = '', n = 0
            for (; n < t;) r += String.fromCharCode.apply(String, e.slice(n, n += D))
            return r
        }(n)
    }

    p.TYPED_ARRAY_SUPPORT = void 0 === e.TYPED_ARRAY_SUPPORT || e.TYPED_ARRAY_SUPPORT, p.poolSize = 8192, p._augment = function (e) {return e.__proto__ = p.prototype, e}, p.from = function (e, t, r) {return _(null, e, t, r)}, p.TYPED_ARRAY_SUPPORT && (p.prototype.__proto__ = Uint8Array.prototype, p.__proto__ = Uint8Array), p.alloc = function (e, t, r) {return function (e, t, r, n) {return g(t), t <= 0 ? d(e, t) : void 0 !== r ? 'string' == typeof n ? d(e, t).fill(r, n) : d(e, t).fill(r) : d(e, t)}(null, e, t, r)}, p.allocUnsafe = function (e) {return v(null, e)}, p.allocUnsafeSlow = function (e) {return v(null, e)}, p.isBuffer = $, p.compare = function (e, t) {
        if (!y(e) || !y(t)) throw new TypeError('Arguments must be Buffers')
        if (e === t) return 0
        for (var r = e.length, n = t.length, i = 0, o = Math.min(r, n); i < o; ++i) if (e[i] !== t[i]) {
            r = e[i], n = t[i]
            break
        }
        return r < n ? -1 : n < r ? 1 : 0
    }, p.isEncoding = function (e) {
        switch (String(e).toLowerCase()) {
            case'hex':
            case'utf8':
            case'utf-8':
            case'ascii':
            case'latin1':
            case'binary':
            case'base64':
            case'ucs2':
            case'ucs-2':
            case'utf16le':
            case'utf-16le':
                return !0
            default:
                return !1
        }
    }, p.concat = function (e, t) {
        if (!c(e)) throw new TypeError('"list" argument must be an Array of Buffers')
        if (0 === e.length) return p.alloc(0)
        var r
        if (void 0 === t) for (t = 0, r = 0; r < e.length; ++r) t += e[r].length
        var n = p.allocUnsafe(t), i = 0
        for (r = 0; r < e.length; ++r) {
            var o = e[r]
            if (!y(o)) throw new TypeError('"list" argument must be an Array of Buffers')
            o.copy(n, i), i += o.length
        }
        return n
    }, p.byteLength = m, p.prototype._isBuffer = !0, p.prototype.swap16 = function () {
        var e = this.length
        if (e % 2 != 0) throw new RangeError('Buffer size must be a multiple of 16-bits')
        for (var t = 0; t < e; t += 2) E(this, t, t + 1)
        return this
    }, p.prototype.swap32 = function () {
        var e = this.length
        if (e % 4 != 0) throw new RangeError('Buffer size must be a multiple of 32-bits')
        for (var t = 0; t < e; t += 4) E(this, t, t + 3), E(this, t + 1, t + 2)
        return this
    }, p.prototype.swap64 = function () {
        var e = this.length
        if (e % 8 != 0) throw new RangeError('Buffer size must be a multiple of 64-bits')
        for (var t = 0; t < e; t += 8) E(this, t, t + 7), E(this, t + 1, t + 6), E(this, t + 2, t + 5), E(this, t + 3, t + 4)
        return this
    }, p.prototype.toString = function () {
        var e = 0 | this.length
        return 0 === e ? '' : 0 === arguments.length ? C(this, 0, e) : k.apply(this, arguments)
    }, p.prototype.equals = function (e) {
        if (!y(e)) throw new TypeError('Argument must be a Buffer')
        return this === e || 0 === p.compare(this, e)
    }, p.prototype.inspect = function () {
        var e = ''
        return this.length > 0 && (e = this.toString('hex', 0, 50).match(/.{2}/g).join(' '), this.length > 50 && (e += ' ... ')), '<Buffer ' + e + '>'
    }, p.prototype.compare = function (e, t, r, n, i) {
        if (!y(e)) throw new TypeError('Argument must be a Buffer')
        if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) throw new RangeError('out of range index')
        if (n >= i && t >= r) return 0
        if (n >= i) return -1
        if (t >= r) return 1
        if (this === e) return 0
        for (var o = (i >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (t >>>= 0), s = Math.min(o, a), h = this.slice(n, i), f = e.slice(t, r), l = 0; l < s; ++l) if (h[l] !== f[l]) {
            o = h[l], a = f[l]
            break
        }
        return o < a ? -1 : a < o ? 1 : 0
    }, p.prototype.includes = function (e, t, r) {return -1 !== this.indexOf(e, t, r)}, p.prototype.indexOf = function (e, t, r) {return S(this, e, t, r, !0)}, p.prototype.lastIndexOf = function (e, t, r) {return S(this, e, t, r, !1)}, p.prototype.write = function (e, t, r, n) {
        if (void 0 === t) n = 'utf8', r = this.length, t = 0 else if (void 0 === r && 'string' == typeof t) n = t, r = this.length, t = 0 else {
            if (!isFinite(t)) throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported')
            t |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = 'utf8')) : (n = r, r = void 0)
        }
        var i = this.length - t
        if ((void 0 === r || r > i) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError('Attempt to write outside buffer bounds')
        n || (n = 'utf8')
        for (var o = !1; ;) switch (n) {
            case'hex':
                return R(this, e, t, r)
            case'utf8':
            case'utf-8':
                return A(this, e, t, r)
            case'ascii':
                return B(this, e, t, r)
            case'latin1':
            case'binary':
                return z(this, e, t, r)
            case'base64':
                return L(this, e, t, r)
            case'ucs2':
            case'ucs-2':
            case'utf16le':
            case'utf-16le':
                return T(this, e, t, r)
            default:
                if (o) throw new TypeError('Unknown encoding: ' + n)
                n = ('' + n).toLowerCase(), o = !0
        }
    }, p.prototype.toJSON = function () {
        return {
            type: 'Buffer',
            data: Array.prototype.slice.call(this._arr || this, 0)
        }
    }
    var D = 4096

    function I (e, t, r) {
        var n = ''
        r = Math.min(e.length, r)
        for (var i = t; i < r; ++i) n += String.fromCharCode(127 & e[i])
        return n
    }

    function P (e, t, r) {
        var n = ''
        r = Math.min(e.length, r)
        for (var i = t; i < r; ++i) n += String.fromCharCode(e[i])
        return n
    }

    function O (e, t, r) {
        var n = e.length;
        (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n)
        for (var i = '', o = t; o < r; ++o) i += X(e[o])
        return i
    }

    function U (e, t, r) {
        for (var n = e.slice(t, r), i = '', o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1])
        return i
    }

    function H (e, t, r) {
        if (e % 1 != 0 || e < 0) throw new RangeError('offset is not uint')
        if (e + t > r) throw new RangeError('Trying to access beyond buffer length')
    }

    function F (e, t, r, n, i, o) {
        if (!y(e)) throw new TypeError('"buffer" argument must be a Buffer instance')
        if (t > i || t < o) throw new RangeError('"value" argument is out of bounds')
        if (r + n > e.length) throw new RangeError('Index out of range')
    }

    function N (e, t, r, n) {
        t < 0 && (t = 65535 + t + 1)
        for (var i = 0, o = Math.min(e.length - r, 2); i < o; ++i) e[r + i] = (t & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i)
    }

    function Z (e, t, r, n) {
        t < 0 && (t = 4294967295 + t + 1)
        for (var i = 0, o = Math.min(e.length - r, 4); i < o; ++i) e[r + i] = t >>> 8 * (n ? i : 3 - i) & 255
    }

    function j (e, t, r, n, i, o) {
        if (r + n > e.length) throw new RangeError('Index out of range')
        if (r < 0) throw new RangeError('Index out of range')
    }

    function W (e, t, r, n, i) {return i || j(e, 0, r, 4), f(e, t, r, n, 23, 4), r + 4}

    function Y (e, t, r, n, i) {return i || j(e, 0, r, 8), f(e, t, r, n, 52, 8), r + 8}

    p.prototype.slice = function (e, t) {
        var r, n = this.length
        if ((e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), (t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), t < e && (t = e), p.TYPED_ARRAY_SUPPORT) (r = this.subarray(e, t)).__proto__ = p.prototype else {var i = t - e