const behavior = Behavior({
    // fly 它其实就是一种“继承”思想的体现。
    // 我们通过定义一个公共的自定义组件构造器，里面包含了需要被复用的属性、数据和组件方法、生命周期函数，其他自定义组件可以通过“继承”来实现属性、数据、方法的复用，
    // 这个机制被广泛应用于第三方组件库中。当多个自定义组件存在大量重复定义和实现的时候，就可以考虑使用“behavior”来抽离封装来解决重复实现的问题。
    properties: {
        service: Object
    }
})

export { behavior }
